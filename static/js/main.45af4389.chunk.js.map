{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","className","href","TodoInfo","user","arr","find","item","getUserById","users","cn","TodoList","todos","map","todo","getUserIDByName","getTodoId","Math","max","App","usersFromServer","useState","todosFromServer","setTodos","setTitle","setName","newTodo","titleError","setTitleError","nameError","setNameError","reset","defaultOptionDisabled","setDefaultOptionDisabled","action","method","onReset","onSubmit","event","preventDefault","trim","currentTodos","type","value","placeholder","onChange","target","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45af4389.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","type Props = {\n  name?: string,\n  email?: string,\n};\n\nexport const UserInfo: React.FC<Props> = ({ name, email }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport users from '../../api/users';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  title: string,\n  userId: number,\n  id: number,\n  completed: boolean,\n}\n\ninterface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\nfunction getUserById(arr: User[], id: number): User | null {\n  return arr.find(item => item.id === id) || null;\n}\n\nexport const TodoInfo: React.FC<Props> = ({\n  id,\n  userId,\n  title,\n  completed,\n}) => {\n  const user = getUserById(users, userId);\n  const email = user?.email;\n  const name = user?.name;\n\n  return (\n    <section\n      className=\"TodoList\"\n    >\n      <article\n        data-id={id}\n        className={cn('TodoInfo', {\n          'TodoInfo--completed': completed,\n        })}\n      >\n        <h2 className=\"TodoInfo__title\">\n          {title}\n        </h2>\n\n        {/* <UserInfo email={email} name={name} /> */}\n        {user && <UserInfo email={email} name={name} />}\n      </article>\n    </section>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\n\ntype Todo = {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n};\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {todos.map(todo => (\n        <div key={todo.id}>\n          <TodoInfo\n            id={todo.id}\n            userId={todo.userId}\n            title={todo.title}\n            completed={todo.completed}\n          />\n        </div>\n      ))}\n    </>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\ninterface Todo {\n  id: number,\n  title: string,\n  completed: boolean,\n  // userId: number | null,\n  userId: number,\n}\n\ninterface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\nfunction getUserIDByName(arr: User[], name: string) {\n  const userId = arr.find(item => item.name === name)?.id || 1;\n\n  return userId;\n}\n\nfunction getTodoId(todos: Todo[]): number {\n  const arr = todos.map(item => item.id);\n\n  return Math.max(...arr) + 1;\n}\n\nexport const App = () => {\n  const users: User[] = usersFromServer;\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n\n  const [title, setTitle] = useState('');\n  const [name, setName] = useState('');\n\n  const newTodo = {\n    id: getTodoId(todos),\n    title,\n    completed: false,\n    userId: getUserIDByName(users, name),\n  };\n\n  const [titleError, setTitleError] = useState(false);\n  const [nameError, setNameError] = useState(false);\n\n  const handleTitleError = () => {\n    if (!title) {\n      setTitleError(true);\n    } else {\n      setTitleError(false);\n    }\n  };\n\n  const handleNameError = () => {\n    if (name === '') {\n      setNameError(true);\n    } else {\n      setNameError(false);\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setName(event.target.value);\n    setNameError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setName('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    handleTitleError();\n    handleNameError();\n\n    if (name !== '' && title.trim()) {\n      reset();\n    }\n\n    if (!title.trim() || name === '') {\n      return;\n    }\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  const [defaultOptionDisabled, setDefaultOptionDisabled] = useState(false);\n  const handleDefaultOptionDisabled = () => {\n    setDefaultOptionDisabled(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onReset={reset}\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              placeholder=\"Enter a title\"\n              onChange={handleTitleChange}\n            />\n          </label>\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              value={name}\n              onChange={handleNameChange}\n              onClick={handleDefaultOptionDisabled}\n            >\n              <option\n                value=\"\"\n                disabled={defaultOptionDisabled}\n              >\n                Choose a user\n              </option>\n              {users.map((user) => (\n                <option value={user.name} key={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n\n          {nameError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}