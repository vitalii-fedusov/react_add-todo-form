{"version":3,"sources":["api/users.ts","api/todos.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","TodoInfo","user","users","find","item","className","href","TodoList","todos","map","todo","cn","getUserIDByName","arr","undefined","App","usersFromServer","useState","todosFromServer","setTodos","setTitle","setName","newTodo","Math","floor","random","titleError","setTitleError","nameError","setNameError","reset","defaultOptionDisabled","setDefaultOptionDisabled","action","method","onReset","onSubmit","event","preventDefault","currentTodos","type","value","placeholder","onChange","target","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af6c5456.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import users from '../../api/users';\n\ninterface Props {\n  title: string,\n  userId: number,\n}\n\ninterface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\nfunction getUserById(arr: User[], id: number) {\n  return arr.find(item => item.id === id);\n}\n\nexport const TodoInfo: React.FC<Props> = ({ title, userId }) => {\n  const user = getUserById(users, userId);\n  const email = user?.email;\n  const name = user?.name;\n\n  return (\n    <>\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <a className=\"UserInfo\" href={`mailto:${email}`}>\n        {name}\n      </a>\n    </>\n  );\n};\n","import cn from 'classnames';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Todo = {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n};\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <article\n          data-id={todo.id}\n          key={todo.id}\n          className={cn('TodoInfo', {\n            'TodoInfo--completed': todo.completed,\n          })}\n        >\n          <TodoInfo\n            title={todo.title}\n            userId={todo.userId}\n          />\n        </article>\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\ninterface Todo {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n}\n\ninterface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\nfunction getUserIDByName(arr: User[], name: string) {\n  const user = arr.find(item => item.name === name);\n\n  if (user !== undefined) {\n    return user.id;\n  }\n\n  return 1;\n}\n\nfunction getRandomId(): number {\n  return Math.floor(Math.random() * 100000);\n}\n\nexport const App = () => {\n  const users: User[] = usersFromServer;\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n\n  const [title, setTitle] = useState('');\n  const [name, setName] = useState('0');\n\n  const newTodo = {\n    id: getRandomId(),\n    title,\n    completed: false,\n    userId: getUserIDByName(users, name),\n  };\n\n  const [titleError, setTitleError] = useState(false);\n  const [nameError, setNameError] = useState(false);\n\n  const handleTitleError = () => {\n    if (!title) {\n      setTitleError(true);\n    } else {\n      setTitleError(false);\n    }\n  };\n\n  const handleNameError = () => {\n    if (name === '0') {\n      setNameError(true);\n    } else {\n      setNameError(false);\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setName(event.target.value);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setName('0');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    handleTitleError();\n    handleNameError();\n\n    if (name !== '0' && title) {\n      reset();\n    }\n\n    if (!title || name === '0') {\n      return;\n    }\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  const [defaultOptionDisabled, setDefaultOptionDisabled] = useState(false);\n  const handleDefaultOptionDisabled = () => {\n    setDefaultOptionDisabled(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onReset={reset}\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              placeholder=\"Enter a title\"\n              onChange={handleTitleChange}\n            />\n          </label>\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              value={name}\n              onChange={handleNameChange}\n              onClick={handleDefaultOptionDisabled}\n            >\n              <option\n                value=\"0\"\n                disabled={defaultOptionDisabled}\n              >\n                Choose a user\n              </option>\n              {users.map((user) => (\n                <option value={user.name} key={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n\n          {nameError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}